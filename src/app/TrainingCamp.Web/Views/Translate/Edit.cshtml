@model TrainingCamp.Web.Models.WebTextTranslationViewModel

@{
    ViewBag.Title = "title";
  
}

<h2>Edit Translation</h2>
@using (Html.BeginForm()) {
	@Html.ValidationSummary(true)
<fieldset>
    <legend>WebTextElement to translate</legend>
        <div class="editor-label">
            @Html.LabelFor(model => model.SourceLang.HtmlText)
        </div>
        <div class="editor-label" id="SourceText">
            @Html.DisplayTextFor(model => model.SourceLang.HtmlText)
        </div>      

    <div class="editor-label">
        @Html.LabelFor(model => model.TargetLang.HtmlText)
    </div>
    <div class="editor-field">
        @Html.EditorFor(model => model.TargetLang.HtmlText)
        @Html.ValidationMessageFor(model => model.TargetLang.HtmlText)
    </div>
        <div class="editor-label">
        @Html.LabelFor(model => model.TargetLang.Comment)
    </div>
    <div class="editor-field">
        @Html.EditorFor(model => model.TargetLang.Comment)
        @Html.ValidationMessageFor(model => model.TargetLang.Comment)
    </div>
            <div class="editor-label">
        @Html.LabelFor(model => model.TargetLang.Translator)
    </div>
    <div class="editor-field">
        @Html.EditorFor(model => model.TargetLang.Translator)
        @Html.ValidationMessageFor(model => model.TargetLang.Translator)
    </div>
    <div>
        <textarea id="translate" ></textarea>
        <button type="button" name="translate" id="translatebtn" onclick="onTranslate()">AutoBing</button>
    </div>
    <p>
		<input type="submit" value="Edit" />
	</p>
</fieldset>
}
<div>
   
    @Html.ActionLink("Back to list", "Index", new {controllername = @Model.SourceLang.View, actionname="index",langname=@Model.TargetLang.Lang,fromLang=@Model.SourceLang.Lang }, null)
   
</div>


<script type="text/javascript">
    window.accessToken = "@Model.AccessToken";

    var Translate = {
        baseUrl: "http://api.microsofttranslator.com/V2/Ajax.svc/",
        appId: "Bearer " + "http%3a%2f%2fschemas.xmlsoap.org%2fws%2f2005%2f05%2fidentity%2fclaims%2fnameidentifier=HelloBingTranslator&http%3a%2f%2fschemas.microsoft.com%2faccesscontrolservice%2f2010%2f07%2fclaims%2fidentityprovider=https%3a%2f%2fdatamarket.accesscontrol.windows.net%2f&Audience=http%3a%2f%2fapi.microsofttranslator.com&ExpiresOn=1381598401&Issuer=https%3a%2f%2fdatamarket.accesscontrol.windows.net%2f&HMACSHA256=ISGfjK4GJ09MY%2b4W%2bjh5PdwWAsO79paLa8%2bhHjqsCPs%3d",
        translate: function(text, from, to, callback) {
            var s = document.createElement("script");
            s.src = this.baseUrl + "/Translate";
            s.src += "?oncomplete=" + callback;
            s.src += "&appId=" + window.accessToken;
            s.src += "&from=" + from;
            s.src += "&to=" + to;
            s.src += "&text=" + text;
            document.getElementsByTagName("head")[0].appendChild(s);
        }
    };
    var mycallback=function(result){alert(result)};
   

    
    function onTranslate_old() {
        Translate.translate("Hello World", "en", "es", "mycallback");

    }

    function onTranslate() {
        GetBing();

    }
    function setHeader(xhr) {
        var autKey = 'Bearer ' + window.accessToken 
        xhr.setRequestHeader('Authorization', autKey);
       }

    

    function GetBing() {
        //Build up the URL for the request
        var requestStr = "http://api.microsofttranslator.com/v2/Http.svc/Translate/?text=I+am+a+gypsy+man.&from=en&to=de";
        
        //Return the promise from making an XMLHttpRequest to the server
        $.ajax({ url: requestStr, beforeSend: setHeader
        })
            .done(
        //Callback for success
            function (request) {
                var results = [], count;

                // Works for FireFox
                var obj = JSON.parse(request);
                // Wokrs for IE 10 and Chrome
               // var obj = request;
                // Verify if the service has returned images
                if (obj.d !== undefined) {
                    var items = obj.d.results;


                }
                else {

                }
            });
    }
  </script>




